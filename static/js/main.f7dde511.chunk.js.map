{"version":3,"sources":["components/svg/airplane.svg","components/svg/location.svg","components/svg/text.svg","components/svg/arrow-right.svg","../node_modules/openflights-cached/dist/icaos sync /^/.//.*/.json$","components/results.jsx","components/calendar.jsx","components/loader.jsx","components/capture.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Results","props","bcbp","JSON","parse","stringify","this","values","closed","Object","map","key","Math","random","React","Component","Calendar","formatBcbp","setState","destination_iata","origin","destination","openflights","findIATA","city","origin_iata","flight_no","flight_number","flight_legs","legs","flight_airline","airline","flight_time","moment","dayOfYear","flight_date","format","flight_booking_no","pnr","flight_seat","seat","flight_checked_in","passenger_status","ready","console","log","state","Fragment","className","alt","src","airplane","href","Loader","Capture","thing","result_string","bcbp_result","document","getElementById","remove","w","Worker","onmessage","data","window","stream","string_result","setTimeout","a","async","scanBarcode","localStorage","barcode","clear","terminate","parseBCBP","class","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7dde511.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/airplane.2e6814f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.b2f804bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.de40f805.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right.b045fb50.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 37;","import React from 'react';\n\nexport default class Results extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let bcbp = JSON.parse(JSON.stringify(this.props.values));\n    return (\n      <div>\n      <details closed=\"true\">\n        <summary>Debug Details</summary>\n        {bcbp ? Object.keys(bcbp).map(key => \n          <p key={Math.random()}>{key}: {bcbp[key]}</p>\n        ) : null}\n         </details>\n      </div>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport airplane from './svg/airplane.svg';\nimport location from './svg/location.svg';\nimport text from './svg/text.svg';\nimport arrowRight from './svg/arrow-right.svg';\nimport openflights from \"openflights-cached\";\nimport moment from \"moment\";\n\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      destination: null, \n      flight_no: null, \n      ready: 0\n    }\n  }\n\n\n  componentDidMount() {\n    let bcbp = JSON.parse(JSON.stringify(this.props.values));\n    this.formatBcbp(bcbp);\n  }\n\n  formatBcbp = (bcbp) => {\n    this.setState({\n     destination_iata: bcbp.origin,\n     destination : openflights.findIATA(`${bcbp.origin}`).city,\n     origin_iata: bcbp.destination,\n     origin : openflights.findIATA(`${bcbp.destination}`).city,\n     flight_no : bcbp.flight_number,\n     flight_legs : bcbp.legs,\n     flight_airline: bcbp.airline,\n     flight_time: moment().dayOfYear(bcbp.flight_date).format('dddd, Do MMMM'),\n     flight_booking_no: bcbp.pnr,\n     flight_seat: bcbp.seat,\n     flight_checked_in: bcbp.passenger_status,\n     ready : 1\n    }, \n    ()=>{\n         console.log(this.state.destination);\n         console.log(this.state.flight_no);\n         console.log(this.state.flight_time);\n        });\n    \n  }\n\n  render() {\n    return (\n      <React.Fragment><br></br>\n      <div id=\"calendar\" className=\"card\">\n      <div id=\"plane-icon\">\n        <img alt=\"Airplane Icon\" src={airplane} />\n      </div>\n        <div className=\"section first\">\n          <h3>Flight from {this.state.origin} to {this.state.destination} ({this.state.flight_airline} {this.state.flight_no})</h3>\n          <br />\n          <p className=\"minor-txt\">{this.state.flight_time}</p>\n        </div>\n\n        <div className=\"section end\">\n\n          <div className=\"route \">\n            <a href={`https://www.google.com/maps?hl=en-GB&q=${this.state.origin}+${this.state.origin_iata}`}><p>{this.state.origin_iata}</p></a>\n          </div>\n\n          <div className=\"route \">\n            <a href={`https://www.google.com/maps?hl=en-GB&q=${this.state.destination}+${this.state.destination_iata}`}><p>{this.state.destination_iata}</p></a>\n          </div>\n\n          <div className=\"grid-item left\">\n            <p>AIRLINE</p>\n            <br />\n            <p>{this.state.flight_airline}</p>\n          </div>\n\n          <div className=\"grid-item right\">\n            <p>FLIGHT NUMBER</p>\n            <br />\n            <p>{this.state.flight_no}</p>\n          </div>\n\n          <div className=\"grid-item left\">\n            <p>BOOKING NUMBER</p>\n            <br />\n            <p>{this.state.flight_booking_no}</p>\n          </div>\n\n          <div className=\"grid-item right\">\n            <p>SEAT</p>\n            <br />\n            <p>{this.state.flight_seat}</p>\n          </div>\n\n          <div className=\"grid-item left\">\n            <p>TICKET STATUS</p>\n            <br />\n            {this.state.flight_checked_in === \"Ticket issuance/passenger checked in\" ? \n          <p className=\"\">Checked in</p> : <p className=\"\">{this.state.flight_checked_in}.</p>}\n          </div>\n\n          <div className=\"grid-item right\">\n            <p>LEGS</p>\n            <br />\n            <p>{this.state.flight_legs}</p>\n          </div>\n\n          \n        </div>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\n//  <img className=\"to\" src={arrowRight} alt=\"Up Arrow\"/>\n// <img alt=\"Location\" src={location} />\n// <img alt=\"Description\" src={text} />\n//<img alt=\"Airplane Icon\" src={airplane} />","import React from 'react';\nimport \"./loader.scss\"\nfunction Loader() {\n  return <div id=\"loader\"><div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div><p>Scanning</p></div>;\n}\nexport default Loader;\n\n\n\n","import React from \"react\";\nimport { parseBCBP } from 'bcbp-parser';\nimport Results from \"./results.jsx\"\nimport Calendar from \"./calendar.jsx\"\nimport Loader from \"./loader.jsx\";\n\nexport default class Capture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result_string: null, \n      bcbp_result: null\n    }\n  }\n\n  componentDidMount() {\n    // console.log(openflights.findIATA(\"DPS\").name);\n    // console.log(openflights.findIATA(\"DPS\").country);\n    // console.log(openflights.findIATA(\"DPS\").city);\n\n    document.getElementById(\"pcCanvas\").remove();\n    document.getElementById(\"mobileCanvas\").remove();\n    let w = new Worker(\"result_check.js\");\n    let ready = 0\n    w.onmessage = (e) => {\n      console.log(e.data);\n      if (window.stream && ready === 0) {\n        let status = window.string_result\n        if (status === null && ready === 0) {\n          setTimeout(async function(){ window.scanBarcode() }, 1000);\n          ready = 1\n        }\n      }\n      // console.log(this.state.result_string)\n      if (localStorage.barcode) {\n        this.setState({\n          result_string: localStorage.barcode\n        }, ()=> {\n          localStorage.clear();\n          w.terminate();\n          this.setState({\n            bcbp_result: parseBCBP(this.state.result_string)\n          }, ()=>{\n             console.log(this.state.bcbp_result);\n             w.terminate();\n          });\n        });\n      }\n    };\n  }\n\n\n  thing = (e) => {\n    console.log(this.state.result_string);\n    console.log(this.state.bcbp_result);\n  }\n\n   render() {\n    return (\n      <div id=\"capture\">\n        \n        {!this.state.bcbp_result ? <Loader /> : null}\n        {!this.state.bcbp_result ? <p class=\"card\" id=\"headtxt\">Scan a boarding pass that a barcode that looks like <a href=\"https://raw.githubusercontent.com/x8BitRain/ticket2calendar/master/public/pdf417_bcbp.png\">this</a> or <a href=\"https://raw.githubusercontent.com/x8BitRain/ticket2calendar/master/public/aztec_bcbp.png\">this</a>.</p> : null}\n        {this.state.bcbp_result ?\n          <React.Fragment> \n            <Calendar values={this.state.bcbp_result} />\n          </React.Fragment>\n         : null}\n          <br></br>\n          \n            <Results values={this.state.bcbp_result} />\n         \n          <br></br>\n      </div>\n    );\n  }\n}\n\n        // {this.state.bcbp_result ? <Results results={} /> : null}\n","import React from 'react';\nimport './App.scss';\nimport Capture from './components/capture.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <Capture />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}